syntax = "proto3";

//import "google/protobuf/descriptor.proto";

package ananas.rpc;

option cc_generic_services = true;

message Request {
    int32 id = 1;
    string service_name = 2;
    string method_name = 3;
    bytes serialized_request = 4; // optional : if no arguments
}

message Error { 
    int32 errnum = 1;
    string msg = 2;
}

message Response { 
    int32 id = 1;
    oneof Body {
        bytes serialized_response = 2;
        Error error = 3;  
    }
}  

message RpcMessage {
    oneof Body {
        Request request = 1;
        Response response = 2;
    }
}

// The endpoint class
enum Proto
{
    TCP = 0;
    UDP = 1;
    SSL = 2;
}

message Endpoint {
    Proto proto = 1;
    string ip = 2;
    int32 port = 3;
}

message EndpointList {
    repeated Endpoint endpoints = 1;
}

message KeepaliveInfo {
    string serviceName = 1;
    Endpoint endpoint = 2;
}

message ServiceName {
    string name = 1;
}

message Status {
    int32 result = 1;
}

service NameService { 
    rpc GetEndpoints(ServiceName) returns(EndpointList) {
    }

    rpc Keepalive(KeepaliveInfo) returns(Status) {
    }
}

// HealthHttpService

message HttpRequestMsg {
    string method = 1;
    string path = 2;
    map<string, string> headers = 3;
    string body = 4;
}

message Summary {
    string summary = 1;
}

service HealthHttpService {
    rpc GetSummary(HttpRequestMsg) returns(Summary) {
    }
}
/*
extend google.protobuf.ServiceOptions {  
      required uint32 global_service_id = 1000;   
}  

extend google.protobuf.MethodOptions { 
    required uint32 local_method_id = 1000; 
}  

service TestService { 
    option (global_service_id) = 17;   
   
    rpc Foo(Request) returns(Response) {
        option (local_method_id) = 5; 
    }  
   
    rpc Bar(Request) returns(Response) {
        option (local_method_id) = 21; 
    }  
}  
*/

